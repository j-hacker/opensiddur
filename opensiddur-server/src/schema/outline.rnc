# Outline definition schema 
# Copyright 2016 Efraim Feinstein <efraim@opensiddur.org>
# Licensed under the GNU Lesser General Public License, version 3 or later

default namespace = "http://jewishliturgy.org/ns/outline/1.0"
namespace olx = "http://jewishliturgy.org/ns/outline/responses/1.0"

start = Outline

## acknowledge "yes" that what the server flagged is what you intend to do 
## For example, server says that item is the same as another item.
Yes = element olx:yes {
  empty
}

## Acknowledge "no" that what the server flagged as the same is not and should be
## treated as a new document
No = element olx:no {
  empty
}

## indicate that what the server thought you wanted to do was incorrect:
## eg, if there are duplicate titles, you actually intended to produce multiple documents

Transliteration = element tr {
  ## required from attribute. What is being transliterated
  attribute from { xsd:string },
  ## required to attribute. What the transliteration is
  attribute to { xsd:string },
  ## If a silent version of the letter exists, what should it transliterate as?
  ## Only applicable to aleph, sin
  attribute silent { xsd:string }?,
  ## In cases where the letter has a dagesh, should it be doubled?
  attribute double { YesNo }? 
}

Title = element title { xsd:string }
Lang = element lang { xsd:language }
Resp = element resp {
    ## contributor URI
    element contributor { xsd:anyURI },
    ## responsibility code
    element responsibility { xsd:string } 
  }

SameAs = element olx:sameAs {
  ## what the element is the same as; for internal, it's a pathway through the outline
  ## for external, it's a URI
  ( element olx:internal { xsd:string } | element olx:external { xsd:anyURI } ),
  ( Yes | No )
}

Status = element olx:status {
  xsd:string
}

Outline = element outline {
  ## required source pointer
  element source { xsd:anyURI },
  ## required title
  Title,
  ## required language
  Lang,
  ## optional responsibility blocks to assign additional responsibility to contributors
  Resp*,
  ## additional items
  Item+
}

## each item in the outline has a title
Item = element item {
  ## file-unique ID for the item
  Title,
  Lang?,
  Resp*,
  SameAs*,
  ## current document status, if any
  Status?,
  Item*
}
