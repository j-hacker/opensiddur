<!-- 
This file is intended to be XInclude-d in the JLPTEI-based
schemas, not as an independent unit
 -->
<specGrp 
  xml:id="common-specs"
  xmlns="http://www.tei-c.org/ns/1.0"
  xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:lang="en">
  <xi:include href="common-schema-base.xml"/>
  <specGrpRef target="#common-specs-base"/>
  <elementSpec ident="links" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add" module="opensiddur">
    <desc>Holds standoff markup links </desc>
    <classes>
      <memberOf key="model.resourceLike"/>
      <memberOf key="att.global"/>
    </classes>
    <content xmlns:rng="http://relaxng.org/ns/structure/1.0">
      <rng:oneOrMore>
        <rng:choice>
          <rng:ref name="link"/>
          <rng:ref name="linkGrp"/>
        </rng:choice>
      </rng:oneOrMore>
    </content>
  </elementSpec>
  <elementSpec ident="segGen" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add" module="opensiddur">
    <desc>Generated segment.</desc>
    <classes>
      <memberOf key="model.segLike"/>
      <memberOf key="att.global"/>
    </classes>
    <content>
      <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="macro.paraContent"/>
    </content>
    <attList>
      <attDef ident="type" mode="add" usage="req">
        <desc>Type of segment generation that is required.</desc>
        <datatype minOccurs="1" maxOccurs="1">
          <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="data.enumerated"/>
        </datatype>
        <valList type="closed">
          <valItem ident="transliteration"/>
        </valList>
      </attDef>
    </attList>
  </elementSpec>
  <elementSpec ident="TEI" mode="change" module="textstructure">
    <constraintSpec ident="TEI-title-required" scheme="isoschematron" mode="add">
      <desc>Test that the document has a main title</desc>
      <constraint>
        <sch:assert test="string-length(normalize-space(//tei:teiHeader/tei:fileDesc/tei:titleStmt/tei:title[not(@type) or @type='main'])) &gt; 0">A main title is required.</sch:assert>
      </constraint>
    </constraintSpec>
  </elementSpec>
  <elementSpec ident="option" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add" module="opensiddur">
    <desc>Marks a section of text, which may be included, depending on the result of a conditional evaluation.</desc>
    <classes>
      <memberOf key="model.choicePart"/>
      <memberOf key="att.global"/>
    </classes>
    <content>
      <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="macro.paraContent"/>
    </content>
  </elementSpec>
  <elementSpec ident="divineName" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add" module="opensiddur">
    <desc>Contains a proper name for the Deity. </desc>
    <classes>
      <memberOf key="model.nameLike"/>
      <memberOf key="att.global"/>
      <memberOf key="att.typed"/>
    </classes>
    <content xmlns:rng="http://relaxng.org/ns/structure/1.0">
      <rng:choice>
        <rng:ref name="macro.phraseSeq"/>
        <rng:group>
          <rng:ref name="reg"/>
          <rng:ref name="orig"/>
        </rng:group>
        <rng:group>
          <rng:ref name="orig"/>
          <rng:ref name="reg"/>
        </rng:group>
      </rng:choice>
    </content>
  </elementSpec>
  <elementSpec ident="w" module="analysis" mode="change">
    <content>
      <rng:zeroOrMore xmlns="http://relaxng.org/ns/structure/1.0">
        <rng:choice>
          <rng:text/>
          <rng:ref name="model.gLike"/>
          <rng:ref name="seg"/>
          <rng:ref name="w"/>
          <rng:ref name="m"/>
          <rng:ref name="c"/>
          <rng:ref name="model.global"/>
          <rng:ref name="model.lPart"/>
          <rng:ref name="model.hiLike"/>
          <rng:ref name="model.pPart.edit"/>
          <rng:ref name="divineName"/>
        </rng:choice>
      </rng:zeroOrMore>
    </content>
  </elementSpec>
  <!-- the @status attribute is insufficient for Open Siddur since it can include
    only one status. We want to record the status of transcriptions, annotations, etc.
   -->
  <classSpec module="tei" mode="change" ident="att.docStatus" type="atts">
    <attList>
      <attDef ident="status" mode="delete"/>
      <attDef ident="docStatus" ns="http://jewishliturgy.org/ns/jlptei/1.0" mode="add">
        <datatype minOccurs="1" maxOccurs="unbounded">
          <rng:ref name="data.enumerated"/>
        </datatype>
        <valList type="semi" mode="add">
          <valItem ident="draft"/>
          <valItem ident="transcribed"/>
          <valItem ident="segmented"/>
          <valItem ident="annotated"/>
          <valItem ident="annotated-with-conditionals"/>
          <valItem ident="linked-to-translation"/>
          <valItem ident="hierarchies-complete"/>
          <valItem ident="proofread-once"/>
          <valItem ident="proofread-twice"/>
        </valList>
      </attDef>
    </attList>  
  </classSpec>
</specGrp>
