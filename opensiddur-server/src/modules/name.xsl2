<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  name.xsl2
  Copyright 2010 Efraim Feinstein <efraim.feinstein@gmail.com>
  Licensed under the GNU Lesser General Public License, version 3 or later
  $Id: name.xsl2 687 2011-01-23 23:36:48Z efraim.feinstein $
 -->
<xsl:stylesheet 
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  version="2.0" 
  exclude-result-prefixes="xs"> 

  <!-- convert a name in the context (a text node) to tei:*name -->
    <xsl:template name="split-name" as="element()*">
        <xsl:variable name="roles" as="xs:string" select="'(Dr|M|Mme|Mr|Mrs|Ms|Rabbi|R|Rev)\.?$'"/>
        <xsl:variable name="links" as="xs:string" select="'(ben|de|den|der|ibn|van|von)$'"/>
        <xsl:variable name="gens" as="xs:string" select="'((Jr|Jr)\.?)|(I|II|III|IV|V|VI|VII|VIII|IX|X|1st|2nd|3rd|4th|5th|6th|7th|8th|9th|10th)$'"/>
        <xsl:variable name="tokens" as="xs:string+" select="tokenize(., '[,\s]+')"/>
        <xsl:variable name="is-role" as="xs:boolean+" select="for $token in $tokens return matches($token, $roles)"/>
        <xsl:variable name="is-link" as="xs:boolean+" select="for $token in $tokens return matches($token, $links)"/>
        <xsl:variable name="is-gen" as="xs:boolean+" select="for $token in $tokens return matches($token, $gens)"/>
        <xsl:for-each select="$tokens">
            <xsl:variable name="pos" as="xs:integer" select="position()"/>
            <xsl:choose>
                <xsl:when test="$is-role[$pos]">
                    <tei:roleName>
                        <xsl:value-of select="."/>
                    </tei:roleName>
                </xsl:when>
                <xsl:when test="$is-link[$pos]">
                    <tei:nameLink>
                        <xsl:value-of select="."/>
                    </tei:nameLink>
                </xsl:when>
                <xsl:when test="$is-gen[$pos]">
                    <tei:genName>
                        <xsl:value-of select="."/>
                    </tei:genName>
                </xsl:when>
                <xsl:when test="($pos = count($tokens)) or           (every $token-pos in (($pos + 1) to count($tokens))            satisfies ($is-role[$token-pos] or $is-link[$token-pos] or $is-gen[$token-pos]))">
                    <tei:surname>
                        <xsl:value-of select="."/>
                    </tei:surname>
                </xsl:when>
                <xsl:otherwise>
                    <tei:forename>
                        <xsl:value-of select="."/>
                    </tei:forename>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>
</xsl:stylesheet>
