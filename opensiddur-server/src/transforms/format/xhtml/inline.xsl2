<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="2.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.w3.org/1999/xhtml" 
  xmlns:tei="http://www.tei-c.org/ns/1.0"
  xmlns:j="http://jewishliturgy.org/ns/jlptei/1.0" 
  xmlns:jx="http://jewishliturgy.org/ns/jlp-processor"
  xmlns:func="http://jewishliturgy.org/ns/functions/xslt"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xd="http://www.pnp-software.com/XSLTdoc"
  exclude-result-prefixes="#all">
  <xsl:import href="../../../common/common.xsl2"/>
  <xd:doc type="stylesheet">
    <xd:short>Transform for inline elements.</xd:short>
    <xd:copyright>Copyright 2011 Efraim Feinstein
    </xd:copyright>
    <xd:detail>
      <p>This program is free software: you can redistribute it
        and/or modify
        it under the terms of the GNU Lesser General Public License as
        published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.</p>

      <p>This program is distributed in the hope that it will be
        useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
        GNU Lesser General Public License for more details.</p>

      <p>
        You should have received a copy of the GNU Lesser General Public
        License along with this program. If not, see
        <a href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/
        </a>
        .
      </p>
    </xd:detail>
  </xd:doc>

  <xd:doc>
    <xd:short>Browsers don't separate text nodes, so I have to</xd:short>
  </xd:doc>
  <xsl:template match="text()[ancestor::tei:w and not(following-sibling::*)]">
    <xsl:copy/>
    <xsl:if test="not(ancestor::tei:w/following::*[self::tei:w|self::tei:pc][1]/self::tei:pc)">
      <xsl:text>&#x0a;</xsl:text>
    </xsl:if>
  </xsl:template>
  
  <xd:doc>
    <xd:short>Text not within a tei:w, add space unless the next text node begins with punctuation</xd:short>
  </xd:doc>
  <xsl:template match="text()[not(ancestor::tei:w)]"> 
    <xsl:copy/>
    <xsl:if test="not(following::text()[.][1]/matches(., '^\p{P}'))">
      <xsl:text>&#x0a;</xsl:text>
    </xsl:if>
  </xsl:template>
  
  <xd:doc>
    <xd:short>Add whitespace after and before certain punctuation</xd:short>
  </xd:doc>
  <xsl:template match="text()[parent::tei:pc][.=('פ','ס','׀')]" priority="10">
    <xsl:text>&#x0a;</xsl:text>
    <xsl:copy/>
    <xsl:text>&#x0a;</xsl:text>
  </xsl:template>

  <xd:doc>
    <xd:short>Connecting punctuation does not get added space</xd:short>
  </xd:doc>
  <xsl:template match="text()[parent::tei:pc][.='־']" priority="10">
    <xsl:copy/>
  </xsl:template>

  <xd:doc>
    <xd:short>Verse and chapter labels don't have added text</xd:short>
  </xd:doc>
  <xsl:template match="text()[parent::tei:label[@n=('chapter','verse')]]" priority="10">
    <xsl:copy/>
  </xsl:template>

  <xd:doc>
    <xd:short>Move chapter/verse labels to the first seg in a verse ab</xd:short>
  </xd:doc>
  <xsl:template match="tei:seg[ancestor::tei:ab[@type='verse']]" priority="10">
    <xsl:variable name="my-verse" select="ancestor::tei:ab[@type='verse']"/>
    <xsl:if test="$my-verse/descendant::tei:seg[1] is .">
      <xsl:apply-templates select="$my-verse/descendant::tei:label[@n=('chapter','verse')]" mode="verse-label"/>
    </xsl:if>
    <xsl:next-match/>
  </xsl:template>
  
  <xd:doc>
    <xd:short>Chapter and verse labels require special handling as a workaround for a Firefox bug.</xd:short>
  </xd:doc>
  <xsl:template match="tei:label[@n=('chapter','verse')]" mode="verse-label">
    <span>
      <xsl:call-template name="set-attributes"/>
      <xsl:variable name="dir" as="xs:string"
        select="func:direction-by-lang(func:language(.))"/>
      <xsl:if test="$dir='rtl'">
        <xsl:attribute name="dir" select="$dir"/>
      </xsl:if>
      <xsl:apply-templates mode="#current"/>
    </span>
  </xsl:template>


</xsl:stylesheet>
