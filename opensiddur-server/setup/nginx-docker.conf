# nginx reverse proxy setup for inside docker
# header helpers for reverse proxied servers
proxy_set_header        Host                    $host;                          
# Ensures the actual hostname is sent to eXist-db and not 'localhost' (needed in 
# eXist-db for server-name in controller-config.xml)
proxy_set_header        X-Real-IP               $remote_addr;                   
# The Real IP of the client and not the IP of nginx proxy
proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
proxy_set_header        nginx-request-uri       $request_uri;                   

# the Accept header from chrome does not play well with eXist https://github.com/eXist-db/exist/issues/1698
proxy_set_header        Accept '*/*'

server {
        listen 80;
        server_name localhost;
        charset utf-8;

        ## use the Google resolver
        resolver 8.8.8.8;

        ## timeouts
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;


        ## CHANGE: change this to the root directory of your opensiddur-client sources
        root /usr/local/opensiddur-client;

        location /api {
            if ($request_method = 'OPTIONS' ) {
                  add_header Access-Control-Allow-Origin $http_origin; 
                  add_header Access-Control-Allow-Methods "GET, PUT, POST, DELETE, OPTIONS";
                  add_header Access-Control-Allow-Headers "Authorization"; 
                  add_header Access-Control-Allow-Credentials "true";    
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
                }
            proxy_pass $scheme://127.0.0.1:8080/exist/restxq$request_uri;
            proxy_intercept_errors on;
            ## remap 401 to 418 so the browser doesn't get upset and pop up a user/pass dialog
            if ($status = 401) {
                return 418 'Unauthorized';
            }
            add_header 'Access-Control-Allow-Origin' $http_origin;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'Content-Type,Accept,Authorization,X-HTTP-Method-Override,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        }

        ## proxy pass to the dev server ##
        location /exist/restxq/api {
            ## to use a local server, uncomment this line and comment the one above:
            proxy_pass   $scheme://127.0.0.1:8080$request_uri;
            
            proxy_intercept_errors on;
            ## remap 401 to 418 so the browser doesn't get upset and pop up a user/pass dialog
            if ($status = 401) {
                return 418 'Unauthorized';
            }
        }
        
        location /apps {
            proxy_pass $scheme://127.0.0.1:8080/exist$request_uri;
            proxy_intercept_errors on;
        }

        ## point to the controller for everything else
        location / {
            expires -1;
            add_header Pragma "no-cache";
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            try_files $uri $uri/ /index.html =404;
        }
}

