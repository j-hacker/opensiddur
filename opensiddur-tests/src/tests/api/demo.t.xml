<?xml version="1.0" encoding="UTF-8"?>
<TestSuite>
  <suiteName>Demo API</suiteName>
  <description>
      <p>Test demo API function calls</p>
      <author>Efraim Feinstein</author>
      <copyright>Copyright 2012 Efraim Feinstein, 
    Licensed under the GNU Lesser General Public License, version 3 or later</copyright>
  </description>
  <asUser>testuser</asUser>
  <password>testuser</password>
  <imports>
  import module namespace demo="http://jewishliturgy.org/api/demo"
    at "xmldb:exist:///db/apps/opensiddur-demos/api/demo.xqm";
  </imports>
  <namespace prefix="tr">http://jewishliturgy.org/ns/tr/1.0</namespace>
  <namespace prefix="output">http://www.w3.org/2010/xslt-xquery-serialization</namespace>
  <namespace prefix="html">http://www.w3.org/1999/xhtml</namespace>
  <namespace prefix="http">http://expath.org/ns/http-client</namespace>
  <setup>
      <create-collection parent="/db/data/transliteration" name="1900"/>
      <create-collection parent="/db/data/transliteration/1900" name="01"/>
      <store collection="/db/data/transliteration/1900/01" name="Test.xml">
         <tr:schema xmlns:tr="http://jewishliturgy.org/ns/tr/1.0">
            <tr:title xml:lang="en">Test</tr:title>
            <tr:description xml:lang="en">A test</tr:description>
            <tr:table>
               <tr:lang in="he" out="he-Latn"/>
               <tr:tr to="a" from="א"/>
               <tr:tr to="b" from="ב"/>
               <tr:tr to="c" from="ג"/>
               <tr:tr to="d" from="ד"/>
               <tr:tr to="e" from="ה"/>
               <tr:tr to="f" from="ו"/>
               <tr:tr to="g" from="ז"/>
               <tr:tr to="h" from="ח"/>
               <tr:tr to="i" from="ט"/>
               <tr:tr to="j" from="י"/>
               <tr:tr to="k" from="כ"/>
               <tr:tr to="l" from="ל"/>
               <tr:tr to="m" from="מ"/>
               <tr:tr to="n" from="נ"/>
               <tr:tr to="o" from="ס"/>
               <tr:tr to="p" from="ע"/>
               <tr:tr to="q" from="פ"/>
               <tr:tr to="r" from="צ"/>
               <tr:tr from="ק" to="t"/>
               <tr:tr from="ר" to="u"/>
               <tr:tr from="ש" to="v"/>
               <tr:tr from="ת" to="w"/>
            </tr:table>
         </tr:schema>
      </store>
  </setup>
  <tearDown>
      <remove-collection collection="/db/data/transliteration/1900"/>
  </tearDown>
  <TestSet>
      <testName>demo index APIs</testName>
      <test>
         <task>demo:list()</task>
         <code>
      demo:list()
      </code>
         <class href="common.t.incl.xml#DiscoveryAPI"/>
      </test>
      <test>
         <task>demo:transliteration-list()</task>
         <code>
      demo:transliteration-list("", 1, 100)
      </code>
         <xpath desc="returns an HTML list">self::html:html/html:body/html:ul[@class="results"]/html:li[@class="result"]/html:a[contains(@href, "/demo/")]</xpath>
      </test>
  </TestSet>
  <TestSet>
      <testName>demo:transliterate-xml()</testName>
      <!-- the username/password will not be stored in the session,
    so go in as a guest -->
    <asUser/>
      <password/>
      <test>
         <task>Post XML and a valid transliteration schema</task>
         <code>
      demo:transliterate-xml(
        document{
          &lt;transliterate xml:lang="he"&gt;אבגדה וזח&lt;/transliterate&gt;
        },
        "Test")
      </code>
         <expected desc="transliterated XML">
            <transliterate xml:lang="he-Latn">abcde fgh</transliterate>
         </expected>
      </test>
      <test>
         <task>Post XML and a nonexistent transliteration schema</task>
         <code>
      demo:transliterate-xml(
        document{
          &lt;transliterate xml:lang="he"&gt;אבגדה וזח&lt;/transliterate&gt;
        },
        "NotExistent")
      </code>
         <xpath desc="returns status code 404">self::rest:response/http:response/@status=404</xpath>
      </test>
  </TestSet>
  <TestSet>
      <testName>demo:transliterate-text()</testName>
      <asUser/>
      <password/>
      <test output="mixed">
         <task>Post text and a valid transliteration schema</task>
         <code>
      demo:transliterate-text(
        util:string-to-binary("אבגדה וזח"),
        "Test")
      </code>
         <xpath desc="output is text/plain">$output[1]/self::rest:response/output:serialization-parameters/output:method/@value="text"</xpath>
         <xpath desc="transliterated text">$output[2]="abcde fgh"</xpath>
      </test>
      <test output="mixed">
         <task>Post text and a nonexistent transliteration schema</task>
         <code>
      demo:transliterate-text(
        util:string-to-binary("אבגדה וזח"),
        "NotExistent")
      </code>
         <xpath desc="returns status code 404">$output[1]/self::rest:response/http:response/@status=404</xpath>
      </test>
  </TestSet>
</TestSuite>