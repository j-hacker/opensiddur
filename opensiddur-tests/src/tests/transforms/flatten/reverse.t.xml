<?xml version="1.0" encoding="UTF-8"?>
<TestSuite>
  <suiteName>Reverse transform</suiteName>
  <description>
      <p>Tests of reverse transform</p>
      <author>Efraim Feinstein</author>
      <copyright>Copyright 2013 Efraim Feinstein
    Licensed under the GNU Lesser General Public License, version 3 or later</copyright>
  </description>
  <namespace prefix="tei">http://www.tei-c.org/ns/1.0</namespace>
  <namespace prefix="j">http://jewishliturgy.org/ns/jlptei/1.0</namespace>
  <namespace prefix="jf">http://jewishliturgy.org/ns/jlptei/flat/1.0</namespace>
  <imports>
    import module namespace reverse="http://jewishliturgy.org/transform/reverse"
      at "xmldb:exist:///db/apps/opensiddur-server/transforms/reverse.xqm";
  </imports>
  <asUser>testuser</asUser>
  <password>testuser</password>
  <TestSet>
      <testName>reverse:reverse-document()</testName>
      <test>
         <task>streamText only</task>
         <code>
      reverse:reverse-document(
        doc("/db/apps/opensiddur-tests/tests/transforms/flatten/reverse1.xml"), 
        map {})
      </code>
         <xpath desc="No @jf:id attributes">empty(.//*[@jf:id])</xpath>
         <xpath desc="No @jf:stream attributes">empty(.//*[@jf:stream])</xpath>
         <xpath desc="A j:streamText exists">exists(.//j:streamText[@xml:id][tei:seg])</xpath>
         <xpath desc="Every child of j:streamText has @xml:id">count(.//j:streamText/*) = 3 and (every $child in .//j:streamText/* satisfies exists($child/@xml:id))</xpath>
      </test>
      <test>
         <task>streamText and one layer</task>
         <code>
      reverse:reverse-document(
        doc("/db/apps/opensiddur-tests/tests/transforms/flatten/reverse2.xml"), 
        map {})
      </code>
         <xpath desc="A j:concurrent exists">exists(.//j:concurrent)</xpath>
         <xpath desc="jf:concurrent does not exist">empty(.//jf:concurrent)</xpath>
         <expected desc="j:concurrent content includes a layer" href="reverse2-reversed.xml"/>
      </test>
      <test>
         <task>streamText and concurrent layers</task>
         <code>
      reverse:reverse-document(
        doc("/db/apps/opensiddur-tests/tests/transforms/flatten/reverse3.xml"), 
        map {})
      </code>
         <expected desc="j:concurrent content includes both layers" href="reverse3-reversed.xml"/>
      </test>
      <test>
         <task>layer with suspend/resume</task>
         <code>
      reverse:reverse-document(
        doc("/db/apps/opensiddur-tests/tests/transforms/flatten/reverse4.xml"), 
        map {})
      </code>
         <expected desc="j:concurrent content correctly reconstitutes suspended layer"
                   href="reverse4-reversed.xml"/>
      </test>
      <test>
         <task>concurrent layers with overlapping suspend/resume</task>
         <code>
      reverse:reverse-document(
        doc("/db/apps/opensiddur-tests/tests/transforms/flatten/reverse5.xml"), 
        map {})
      </code>
         <expected desc="j:concurrent content correctly reconstitutes multiple suspended layers"
                   href="reverse5-reversed.xml"/>
      </test>
  </TestSet>
</TestSuite>